<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:util="http://www.springframework.org/schema/util"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd">

    <bean class="org.jahia.params.valves.AuthPipelineInitializer">
        <property name="authPipeline" ref="authPipeline"/>
    </bean>

    <bean class="org.jahia.modules.defaultmodule.MoveAction">
        <property name="contentManager" ref="ContentManagerHelper"/>
    </bean>

    <bean class="org.jahia.modules.defaultmodule.LockAction"/>

    <bean class="org.jahia.modules.defaultmodule.LockEditableFileAction"/>

    <bean class="org.jahia.modules.defaultmodule.UnlockAction"/>

    <bean class="org.jahia.modules.defaultmodule.StartWorkflowAction">
        <property name="workflowService" ref="workflowService"/>
    </bean>
    <bean class="org.jahia.modules.defaultmodule.StartPublicationWorkflowAction">
        <property name="publicationService" ref="jcrPublicationService"/>
    </bean>

    <bean class="org.jahia.modules.defaultmodule.ExecuteTaskAction">
        <property name="workflowService" ref="workflowService"/>
    </bean>

    <bean class="org.jahia.modules.defaultmodule.CommentTaskAction">
        <property name="workflowService" ref="workflowService"/>
    </bean>

    <bean class="org.jahia.modules.defaultmodule.actions.ChainAction">
        <property name="templateService" ref="JahiaTemplateManagerService"/>
        <property name="urlResolverFactory" ref="urlResolverFactory" />
        <property name="defaultPostAction" >
            <bean class="org.jahia.bin.DefaultPostAction">
                <property name="loggingService" ref="loggingService"/>
            </bean>
        </property>
        <property name="requireAuthenticatedUser" value="${jahia.chainAction.requireAuthenticatedUser:false}"/>
    </bean>
    
    <bean class="org.apache.camel.spring.CamelBeanPostProcessor">
    	<property name="camelContext" ref="jahiaNotificationContext"/>
    </bean>

    <bean class="org.jahia.modules.defaultmodule.actions.MultipleDeleteAction">
        <property name="name" value="deleteNodes"/>
    </bean>

    <bean class="org.jahia.modules.defaultmodule.actions.MultipleCopyAction">
        <property name="name" value="copy"/>
    </bean>

    <bean class="org.jahia.modules.defaultmodule.actions.MultipleCutAction">
        <property name="name" value="cut"/>
    </bean>

    <bean class="org.jahia.modules.defaultmodule.actions.MultiplePasteAction">
        <property name="name" value="paste"/>
    </bean>

    <bean class="org.jahia.modules.defaultmodule.actions.CheckClipboardAction">
        <property name="name" value="checkclipboard"/>
    </bean>

    <bean class="org.jahia.modules.defaultmodule.actions.CleanClipboardAction">
        <property name="name" value="emptyclipboard"/>
    </bean>

    <bean class="org.jahia.modules.defaultmodule.actions.MultiplePublishAction">
        <property name="name" value="publishNodes"/>
        <property name="workflowService" ref="workflowService"/>
        <property name="publicationHelper" ref="PublicationHelper"/>
    </bean>

    <bean class="org.jahia.modules.defaultmodule.actions.AddComment" >
        <property name="name" value="addComment"/>
        <property name="requiredPermission" value="addComment" />
    </bean>

    <bean class="org.jahia.modules.defaultmodule.actions.CreateBoardAction" >
        <property name="name" value="createBoard"/>
    </bean>

    <bean class="org.jahia.modules.defaultmodule.actions.PublishAction">
        <property name="publicationService" ref="jcrPublicationService"/>
        <property name="requiredPermission" value="publish"/>
        <property name="requiredWorkspace" value="default"/>
    </bean>

    <bean class="org.jahia.modules.defaultmodule.actions.AutoPublicationAction">
        <property name="publicationService" ref="jcrPublicationService"/>
        <property name="requiredPermission" value="publish"/>
        <property name="requiredWorkspace" value="default"/>
    </bean>

    <bean class="org.jahia.modules.defaultmodule.actions.AddMemberToGroupAction">
        <property name="name" value="addMember"/>
        <property name="jahiaGroupManagerService" ref="JahiaGroupManagerService"/>
        <property name="jahiaUserManagerService" ref="JahiaUserManagerService"/>
        <property name="requiredPermission" value="addMemberToGroup" />
    </bean>

    <bean class="org.jahia.modules.defaultmodule.actions.AddPrincipalsInRolesAction">
        <property name="name" value="addInRoles"/>
        <property name="jahiaGroupManagerService" ref="JahiaGroupManagerService"/>
        <property name="jahiaUserManagerService" ref="JahiaUserManagerService"/>
        <property name="requiredPermission" value="addPrincipalsInRoles" />
    </bean>

    <bean class="org.jahia.modules.defaultmodule.actions.admin.AdminEditSiteAction">
        <property name="sitesService" ref="JahiaSitesService"/>
        <property name="requiredPermission" value="adminVirtualSites" />
    </bean>

    <bean class="org.jahia.modules.defaultmodule.actions.admin.AdminDeleteSiteAction">
        <property name="sitesService" ref="JahiaSitesService"/>
        <property name="requiredPermission" value="adminVirtualSites" />
    </bean>

    <bean class="org.jahia.modules.defaultmodule.actions.admin.AdminCreateSiteAction">
        <property name="sitesService" ref="JahiaSitesService"/>
        <property name="requiredPermission" value="adminVirtualSites" />
    </bean>

    <bean class="org.jahia.modules.defaultmodule.actions.AddMemberToAcl" />

    <bean class="org.jahia.modules.defaultmodule.actions.GetWorkflowTasksAction">
        <property name="name" value="getWorkflowTasks"/>
        <property name="workflowService" ref="workflowService"/>
    </bean>

    <bean id="WorkspaceSwitchFilter" class="org.jahia.modules.defaultmodule.WorkspaceSwitchFilter">
        <property name="priority" value="17" />
        <property name="description" value="Switch to another workspace"/>
        <property name="applyOnNodeTypes" value="jnt:workspaceSwitch" />
        <property name="applyOnConfigurations" value="module" />
    </bean>

    <util:map id="defaultModuleProperties">
        <entry key="memberDisplayLimit" value="${jahia.settings.memberDisplayLimit:100}"/>
    </util:map>

    <bean class="org.jahia.services.workflow.WorklowTypeRegistration">
        <property name="type" value="publish"/>
        <property name="definition" value="1-step-publication"/>
        <property name="canBeUsedForDefault" value="true"/>
        <property name="defaultPriority" value="1"/>
        <property name="permissions" >
            <map>
                <entry key="start" value="publication-start"/>
                <entry key="review" value="publication-review"/>
            </map>
        </property>
        <property name="forms">
            <map>
                <entry key="start" value="jnt:simpleWorkflow"/>
                <entry key="review" value="jnt:simpleWorkflow"/>
            </map>
        </property>
    </bean>

    <bean class="org.jahia.services.workflow.WorklowTypeRegistration">
        <property name="type" value="unpublish"/>
        <property name="definition" value="1-step-unpublication"/>
        <property name="canBeUsedForDefault" value="true"/>
        <property name="defaultPriority" value="1"/>
        <property name="permissions" >
            <map>
                <entry key="start" value="publication-start"/>
                <entry key="unpublish" value="publication-review"/>
            </map>
        </property>
        <property name="forms">
            <map>
                <entry key="start" value="jnt:simpleWorkflow"/>
                <entry key="unpublish" value="jnt:simpleWorkflow"/>
            </map>
        </property>
    </bean>

    <bean class="org.jahia.modules.defaultmodule.initializers.LinkTypeInitializer">
        <property name="key" value="linkTypeInitializer"/>
    </bean>
</beans>
